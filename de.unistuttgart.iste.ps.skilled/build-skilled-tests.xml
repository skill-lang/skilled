<?xml version="1.0" encoding="UTF-8"?>
<project name="de.unistuttgart.iste.ps.skilled" default="build-skilled-tests" xmlns:jacoco="antlib:org.jacoco.ant">
    <property name="tests-project-path" value="../de.unistuttgart.iste.ps.skilled.tests" />
    <property name="source" value="1.8" />
    <property name="target" value="1.8" />

    <path id="classpath-tests">
        <fileset dir="lib">
            <patternset>
                <include name="*.jar"/>
                <exclude name="*antlr*4*.jar"/>
            </patternset>
        </fileset>
        <pathelement location="ant/bin"/>
        <pathelement location="lib2/de.unistuttgart.iste.ps.skilled.ui.jar"/>
    </path>

    <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
        <classpath path="lib/jacocoant.jar"/>
    </taskdef>

    <target name="compile-xtend-tests">
        <pathconvert pathsep="${path.separator}" 
                     property="classpath-string" 
                     refid="classpath-tests">
        </pathconvert>
        <java classpathref="classpath-tests"
              classname="org.eclipse.xtend.core.compiler.batch.Main"
              fork="true"
              failonerror="yes">
            <arg value="-cp" />
            <arg value="${classpath-string}" />
            <arg value="-d" />
            <arg value="${tests-project-path}/ant/xtend-gen" />
            <arg value="${tests-project-path}/src-gen${path.separator}${tests-project-path}/src" />
        </java>
    </target> 

    <target name="compile-java-tests" depends="compile-xtend-tests">
        <mkdir dir="${tests-project-path}/ant/bin" />
        <javac classpathref="classpath-tests" destdir="${tests-project-path}/ant/bin" source="${source}" target="${target}" includeantruntime="true">
            <src path="${tests-project-path}/src" />
            <src path="${tests-project-path}/src-gen" />
            <src path="${tests-project-path}/ant/xtend-gen" />
        </javac>
        <copy todir="${tests-project-path}/ant/bin">
            <fileset dir="${tests-project-path}/src" excludes="**/*.java,**/*.xtend" />
            <fileset dir="${tests-project-path}/src-gen" excludes="**/*.java,**/*.xtend" />
        </copy>
    </target>

    <target name="do-tests" depends="compile-java-tests">
        <mkdir dir="ant/junit"/>
        <mkdir dir="resources"/>
        <copy todir="resources">
            <fileset dir="${tests-project-path}/resources"/>
        </copy>
        <jacoco:coverage destfile="ant/junit/jacoco_SKilLEd.exec">
            <junit fork="yes" forkmode="once" printsummary="on" haltonerror="false" haltonfailure="false">
                <classpath>
		    <path refid="classpath-tests"/>
		    <pathelement location="../../scala/lib/scala-library.jar"/>
                    <pathelement location="ant/bin"/>
                    <pathelement location="${tests-project-path}/ant/bin"/>
                </classpath>
                <formatter type="xml"/>
                <batchtest todir="ant/junit">
                    <fileset dir="${tests-project-path}/ant/bin">
                        <include name="**/Test*.class"/>
                    </fileset>
                </batchtest>
            </junit>
        </jacoco:coverage>
        <delete dir="resources"/>
    </target>
    
    <target name="make-jar-skilled-tests" depends="compile-java-tests">
        <jar destfile="lib2/de.unistuttgart.iste.ps.skilled.tests.jar" filesetmanifest="mergewithoutmain">
            <manifest>
                <attribute name="Class-Path" value="../lib"/>
            </manifest>
            <fileset dir="${tests-project-path}/ant/bin"/>
        </jar>
    </target>

    <target name="setup-tests-project-libs">
        <copy todir="${tests-project-path}/lib">
            <fileset dir="lib/deps">
                <include name="skill.java.common.jar"/>
                <include name="skill.jvm.common.jar"/>
            </fileset>
            <fileset dir="lib">
                <include name="skill-0.3.jar"/>
            </fileset>
        </copy>
    </target>

    <target name="prepare-xtend-gen">
        <mkdir dir="${tests-project-path}/xtend-gen"/>
        <copy todir="${tests-project-path}/xtend-gen">
            <fileset dir="${tests-project-path}/ant/xtend-gen"/>
        </copy>
    </target>

    <target name="build-skilled-tests" depends="setup-tests-project-libs,do-tests,prepare-xtend-gen"/>

</project>
