# This file has nothing to do with
# the rest of the specification and
# serves the sole purpose of testing
# inheritance.

/* The following declarations should work */
Typ1 {
  bool field1;
  string field2;
  const i64 field3 = 3000000000;
  list<f32> field4;
}

Typ2 {
  bool[] field5;
  string[123] field6;
  Typ2 field7;
}

interface I1 {
  set<Typ1> field8;
  i16 field9;
}

interface I2 {
  Typ1 field10;
  map<annotation, annotation, string> field11;
}

Typ3:I1 {
  f64 field12;
}

Typ4:Typ3:I1 {
  f64 field13;
}

Typ5:I1:Typ3 {
  f64 field14;
}

interface I3:Typ3:I1 {
  f64 field15;
}

interface I4:I1:Typ3 {
  f64 field16;
}

Typ6:Typ1 {
  f64 field17;
}

Typ7:Typ6:Typ1 {
  f64 field18;
}

Typ8:Typ1:Typ6 {
  f64 field19;
}

interface I5:Typ6:Typ1 {
  f64 field20;
}

interface I6:Typ1:Typ6 {
  f64 field21;
}

interface I7:Typ1 {
  f64 field22;
}

Typ9:I7:Typ1 {
  f64 field23;
}

Typ10:Typ1:I7 {
  f64 field24;
}

interface In8:I7:Typ1 {
  f64 field25;
}

interface I9:Typ1:I7 {
  f64 field26;
}

interface I10:I1 {
  f64 field27;
}

Typ11:I10:I1 {
  f64 field28;
}

Typ12:I1:I10 {
  f64 field29;
}

interface I11:I10:I1 {
  f64 field30;
}

interface I12:I1:I10 {
  f64 field31;
}

Typ13:I1:I2:Typ1 {
  f64 field32;
}

interface I13:Typ1:Typ2:I1:I2 {
  f64 field33;
}

/* The following declarations should NOT work */

Typ14:Typ1:Typ2 {
  f64 field34;
}