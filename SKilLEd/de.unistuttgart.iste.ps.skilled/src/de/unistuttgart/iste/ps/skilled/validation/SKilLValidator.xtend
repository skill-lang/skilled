/*
 * generated by Xtext
 */
package de.unistuttgart.iste.ps.skilled.validation

import de.unistuttgart.iste.ps.skilled.sKilL.Constant
import org.eclipse.xtext.validation.Check
import de.unistuttgart.iste.ps.skilled.sKilL.BuildInType
import de.unistuttgart.iste.ps.skilled.sKilL.Integerconstant
import de.unistuttgart.iste.ps.skilled.sKilL.SKilLPackage


/**
 * This class contains custom validation rules. 
 *
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class SKilLValidator extends AbstractSKilLValidator {
	
	public static val INVALID_CONSTANT_TYPE = 'invalidConstantType'
	
	@Check
	def checkConstantHasAnInteger(Constant constant) {
		if(constant.fieldtype != Integerconstant) {
			error('Only an Integer can be const.', constant, SKilLPackage.Literals.CONSTANT.getEStructuralFeature("fieldtype") ,INVALID_CONSTANT_TYPE)
		} 
	}
}
