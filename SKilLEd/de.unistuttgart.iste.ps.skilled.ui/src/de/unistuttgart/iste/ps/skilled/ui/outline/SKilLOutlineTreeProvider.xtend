/*
 * generated by Xtext
 */
package de.unistuttgart.iste.ps.skilled.ui.outline

import org.eclipse.xtext.ui.editor.outline.impl.DocumentRootNode
import de.unistuttgart.iste.ps.skilled.sKilL.TypeDeclaration
import de.unistuttgart.iste.ps.skilled.sKilL.Typedef
import de.unistuttgart.iste.ps.skilled.sKilL.Declaration
import de.unistuttgart.iste.ps.skilled.sKilL.File
import org.eclipse.xtext.ui.editor.outline.IOutlineNode
import de.unistuttgart.iste.ps.skilled.sKilL.Field
import de.unistuttgart.iste.ps.skilled.sKilL.Enumtype
import de.unistuttgart.iste.ps.skilled.sKilL.Fieldcontent
import de.unistuttgart.iste.ps.skilled.sKilL.Fieldtype
import org.eclipse.emf.ecore.EObject
import de.unistuttgart.iste.ps.skilled.sKilL.DeclarationReference

/**
 * This class defines the Outline of the Skill-Files
 * @author Ken Singer
 */
class SKilLOutlineTreeProvider extends org.eclipse.xtext.ui.editor.outline.impl.DefaultOutlineTreeProvider {

	def protected _createChildren(DocumentRootNode parentNode, File modelElement) {
		for (Declaration dec : modelElement.declarations) {
			createNode(parentNode, dec)
		}
	}

	def protected _createChildren(IOutlineNode parentNode, Declaration modelElement) {
		if (modelElement instanceof TypeDeclaration)
			for (Field field : modelElement.fields) {
				createNode(parentNode, field.fieldcontent)
			}

		if (modelElement instanceof Typedef)
			_createChildren(parentNode, modelElement.fieldtype)

		if (modelElement instanceof Enumtype)
			for (Field f : modelElement.fields) {
				createNode(parentNode, f.fieldcontent)
			}
	}

	def protected _createChildren(IOutlineNode parentNode, Fieldtype modelElement) {
		if (modelElement instanceof DeclarationReference) {
			createNode(parentNode, modelElement.type)		
		}
	}

	override protected _isLeaf(EObject modelElement) {
		if (modelElement instanceof Fieldcontent || modelElement instanceof DeclarationReference) {
			return true;
		} else if (modelElement instanceof TypeDeclaration) {
			return modelElement.fields.empty
		} else {
			return false;
		}
	}
}